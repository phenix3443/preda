
contract Encrypt{
	@global array<uint8> m;	
	@global array<uint8> pk;
	@global array<uint8> puk;


	function testSHA3() export {
		const array<uint8> hashed = __util.sha3(m);
		__debug.print(hashed);
	}

	function testMD5() export{
		const array<uint8> hashed = __util.md5(m);
		__debug.print(hashed);
	}

	function testSM3() export{
		const array<uint8> hashed = __util.sm3(m);
		__debug.print(hashed);
	}
	
	function testSM4() export{
		const array<uint8> encrypted = __util.sm4_enc(m, pk);
		__debug.print(encrypted);
		const array<uint8> decrypted = __util.sm4_dec(encrypted, pk);
		__debug.assert(m[uint32(0)]==decrypted[uint32(0)], "data != decrypted");
	}

	function TestSM2() export{
		const array<uint8> sign = __util.sm2_sign(m, pk);
		__debug.assert(__util.sm2_verify(m, sign, puk), "verify failed");
	}
}
